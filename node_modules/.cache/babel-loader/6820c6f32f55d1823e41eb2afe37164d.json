{"ast":null,"code":"import { DeFiWeb3Connector } from \"deficonnect\";\nexport const getProvider = wallet => {\n  if (wallet == \"cronos\") return cronosWallet;\n  return metamaskWallet;\n};\n\nconst metamaskWallet = () => {\n  let provider = null;\n  const {\n    ethereum\n  } = window;\n\n  if (ethereum) {\n    provider = ethereum;\n  }\n\n  return provider;\n};\n\nconst cronosWallet = async () => {\n  try {\n    const connector = new DeFiWeb3Connector({\n      supportedChainIds: [25, 56, 3, 1],\n      rpc: {\n        25: \"https://evm-cronos.crypto.org\",\n        56: \"https://bsc-dataseed1.binance.org\",\n        3: \"https://ropsten.infura.io/v3/9aa3d95b3bc440fa88ea12eaa4456161\",\n        1: \"https://mainnet.infura.io/v3/20e078e98de64af88b26c6b1bb47f822\"\n      },\n      pollingInterval: 15000\n    });\n    await connector.activate();\n    const provider = await connector.getProvider();\n    return provider;\n  } catch (err) {\n    return null;\n  }\n};","map":{"version":3,"names":["DeFiWeb3Connector","getProvider","wallet","cronosWallet","metamaskWallet","provider","ethereum","window","connector","supportedChainIds","rpc","pollingInterval","activate","err"],"sources":["/Users/babarhanif/Downloads/CroLick-NFT-Dapp/src/redux/blockchain/blockchain.helpers.js"],"sourcesContent":["import { DeFiWeb3Connector } from \"deficonnect\";\n\nexport const getProvider = (wallet) => {\n  if (wallet == \"cronos\") return cronosWallet;\n  return metamaskWallet;\n};\n\nconst metamaskWallet = () => {\n  let provider = null;\n  const { ethereum } = window;\n  if (ethereum) {\n    provider = ethereum;\n  }\n  return provider;\n};\n\nconst cronosWallet = async () => {\n  try {\n    const connector = new DeFiWeb3Connector({\n      supportedChainIds: [25, 56, 3, 1],\n      rpc: {\n        25: \"https://evm-cronos.crypto.org\",\n        56: \"https://bsc-dataseed1.binance.org\",\n        3: \"https://ropsten.infura.io/v3/9aa3d95b3bc440fa88ea12eaa4456161\",\n        1: \"https://mainnet.infura.io/v3/20e078e98de64af88b26c6b1bb47f822\",\n      },\n      pollingInterval: 15000,\n    });\n\n    await connector.activate();\n    const provider = await connector.getProvider();\n    return provider;\n  } catch (err) {\n    return null;\n  }\n};\n"],"mappings":"AAAA,SAASA,iBAAT,QAAkC,aAAlC;AAEA,OAAO,MAAMC,WAAW,GAAIC,MAAD,IAAY;EACrC,IAAIA,MAAM,IAAI,QAAd,EAAwB,OAAOC,YAAP;EACxB,OAAOC,cAAP;AACD,CAHM;;AAKP,MAAMA,cAAc,GAAG,MAAM;EAC3B,IAAIC,QAAQ,GAAG,IAAf;EACA,MAAM;IAAEC;EAAF,IAAeC,MAArB;;EACA,IAAID,QAAJ,EAAc;IACZD,QAAQ,GAAGC,QAAX;EACD;;EACD,OAAOD,QAAP;AACD,CAPD;;AASA,MAAMF,YAAY,GAAG,YAAY;EAC/B,IAAI;IACF,MAAMK,SAAS,GAAG,IAAIR,iBAAJ,CAAsB;MACtCS,iBAAiB,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,CAAT,EAAY,CAAZ,CADmB;MAEtCC,GAAG,EAAE;QACH,IAAI,+BADD;QAEH,IAAI,mCAFD;QAGH,GAAG,+DAHA;QAIH,GAAG;MAJA,CAFiC;MAQtCC,eAAe,EAAE;IARqB,CAAtB,CAAlB;IAWA,MAAMH,SAAS,CAACI,QAAV,EAAN;IACA,MAAMP,QAAQ,GAAG,MAAMG,SAAS,CAACP,WAAV,EAAvB;IACA,OAAOI,QAAP;EACD,CAfD,CAeE,OAAOQ,GAAP,EAAY;IACZ,OAAO,IAAP;EACD;AACF,CAnBD"},"metadata":{},"sourceType":"module"}